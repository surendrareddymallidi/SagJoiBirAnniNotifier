@model SagEmpDataModel.busSagEmployee

@{
    ViewBag.Title = "Create";
}

<h3>Create Employee</h3>


@using (Html.BeginForm("Create", "Employees", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row">
            <div class="form-group">
                @Html.LabelFor(model => model.photo, htmlAttributes: new { @class = "control-label col-md-offset-2 col-md-4 text-center" })
                <div class="col-md-offset-5 col-md-4">
                    <image name="photo" id="photo" height="75px" width="75px"></image>
                    @Html.TextBoxFor(model => model.user_image_data, new { Type = "File", onchange= "readURL(this)", accept = "image/*" })
                    @Html.ValidationMessageFor(model => model.user_image_data, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row form-group">
            @Html.LabelFor(model => model.firstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.firstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.firstName, "", new { @class = "text-danger" })
            </div>

            @Html.LabelFor(model => model.middleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.middleName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.middleName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row form-group">
            @Html.LabelFor(model => model.lastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.lastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.lastName, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row form-group">
            @Html.LabelFor(model => model.dateOfBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.dateOfBirth, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.dateOfBirth, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.dateOfJoining, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.dateOfJoining, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.dateOfJoining, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row form-group">
            @Html.LabelFor(model => model.project, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.project, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.project, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.designation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.designation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.designation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row form-group">
            @Html.LabelFor(model => model.locationId, "Location", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownList("locationId", null, "Select Location", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.locationId, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.education, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextAreaFor(model => model.education, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.education, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row form-group">
            @Html.LabelFor(model => model.previousCompany, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.previousCompany, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.previousCompany, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.previousCompanyDesignation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.previousCompanyDesignation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.previousCompanyDesignation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row form-group">
            @Html.LabelFor(model => model.hobbies, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.TextAreaFor(model => model.hobbies, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.hobbies, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script type="text/javascript">
        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#photo')
                        .attr('src', e.target.result)
                        .width(150)
                        .height(200);
                };
                reader.readAsDataURL(input.files[0]);
            }
        }
    </script>
}

